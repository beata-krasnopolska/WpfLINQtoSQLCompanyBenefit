<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CompanyBenefitDBDataSet" targetNamespace="http://tempuri.org/CompanyBenefitDBDataSet.xsd" xmlns:mstns="http://tempuri.org/CompanyBenefitDBDataSet.xsd" xmlns="http://tempuri.org/CompanyBenefitDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CompanyBenefitDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CompanyBenefitDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WpfLINQtoSQLCompanyBenefit.Properties.Settings.GlobalReference.Default.CompanyBenefitDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BenefitListTableAdapter" GeneratorDataComponentClassName="BenefitListTableAdapter" Name="BenefitList" UserDataComponentName="BenefitListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.BenefitList" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BenefitList] WHERE (([Id] = @Original_Id) AND ([BenefitName] = @Original_BenefitName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BenefitName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BenefitList] ([BenefitName]) VALUES (@BenefitName);
SELECT Id, BenefitName FROM BenefitList WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BenefitName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, BenefitName FROM dbo.BenefitList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BenefitList] SET [BenefitName] = @BenefitName WHERE (([Id] = @Original_Id) AND ([BenefitName] = @Original_BenefitName));
SELECT Id, BenefitName FROM BenefitList WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BenefitName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BenefitName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BenefitName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CompanyBenefitDB.dbo.BenefitList" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="BenefitName" DataSetColumn="BenefitName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonTableAdapter" GeneratorDataComponentClassName="PersonTableAdapter" Name="Person" UserDataComponentName="PersonTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.Person" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Person] WHERE (([Id] = @Original_Id) AND ([PersonName] = @Original_PersonName) AND ([Gender] = @Original_Gender) AND ([PostId] = @Original_PostId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Gender" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PostId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PostId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Person] ([PersonName], [Gender], [PostId]) VALUES (@PersonName, @Gender, @PostId);
SELECT Id, PersonName, Gender, PostId FROM Person WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Gender" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PostId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PostId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, PersonName, Gender, PostId FROM dbo.Person</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Person] SET [PersonName] = @PersonName, [Gender] = @Gender, [PostId] = @PostId WHERE (([Id] = @Original_Id) AND ([PersonName] = @Original_PersonName) AND ([Gender] = @Original_Gender) AND ([PostId] = @Original_PostId));
SELECT Id, PersonName, Gender, PostId FROM Person WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Gender" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PostId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PostId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PersonName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PersonName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Gender" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PostId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PostId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CompanyBenefitDB.dbo.Person" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PersonName" DataSetColumn="PersonName" />
              <Mapping SourceColumn="Gender" DataSetColumn="Gender" />
              <Mapping SourceColumn="PostId" DataSetColumn="PostId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonBenefitTableAdapter" GeneratorDataComponentClassName="PersonBenefitTableAdapter" Name="PersonBenefit" UserDataComponentName="PersonBenefitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.PersonBenefit" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonBenefit] WHERE (([Id] = @Original_Id) AND ([PersonId] = @Original_PersonId) AND ([BenefitId] = @Original_BenefitId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonBenefit] ([PersonId], [BenefitId]) VALUES (@PersonId, @BenefitId);
SELECT Id, PersonId, BenefitId FROM PersonBenefit WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, PersonId, BenefitId FROM dbo.PersonBenefit</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonBenefit] SET [PersonId] = @PersonId, [BenefitId] = @BenefitId WHERE (([Id] = @Original_Id) AND ([PersonId] = @Original_PersonId) AND ([BenefitId] = @Original_BenefitId));
SELECT Id, PersonId, BenefitId FROM PersonBenefit WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BenefitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BenefitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CompanyBenefitDB.dbo.PersonBenefit" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PersonId" DataSetColumn="PersonId" />
              <Mapping SourceColumn="BenefitId" DataSetColumn="BenefitId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PostTableAdapter" GeneratorDataComponentClassName="PostTableAdapter" Name="Post" UserDataComponentName="PostTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CompanyBenefitDBConnectionString (Settings)" DbObjectName="CompanyBenefitDB.dbo.Post" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Post] WHERE (([Id] = @Original_Id) AND ([PostName] = @Original_PostName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PostName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PostName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Post] ([PostName]) VALUES (@PostName);
SELECT Id, PostName FROM Post WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PostName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PostName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, PostName FROM dbo.Post</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Post] SET [PostName] = @PostName WHERE (([Id] = @Original_Id) AND ([PostName] = @Original_PostName));
SELECT Id, PostName FROM Post WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PostName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PostName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PostName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PostName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CompanyBenefitDB.dbo.Post" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PostName" DataSetColumn="PostName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CompanyBenefitDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CompanyBenefitDBDataSet" msprop:Generator_UserDSName="CompanyBenefitDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BenefitList" msprop:Generator_TableClassName="BenefitListDataTable" msprop:Generator_TableVarName="tableBenefitList" msprop:Generator_TablePropName="BenefitList" msprop:Generator_RowDeletingName="BenefitListRowDeleting" msprop:Generator_RowChangingName="BenefitListRowChanging" msprop:Generator_RowEvHandlerName="BenefitListRowChangeEventHandler" msprop:Generator_RowDeletedName="BenefitListRowDeleted" msprop:Generator_UserTableName="BenefitList" msprop:Generator_RowChangedName="BenefitListRowChanged" msprop:Generator_RowEvArgName="BenefitListRowChangeEvent" msprop:Generator_RowClassName="BenefitListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="BenefitName" msprop:Generator_ColumnVarNameInTable="columnBenefitName" msprop:Generator_ColumnPropNameInRow="BenefitName" msprop:Generator_ColumnPropNameInTable="BenefitNameColumn" msprop:Generator_UserColumnName="BenefitName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Person" msprop:Generator_TableClassName="PersonDataTable" msprop:Generator_TableVarName="tablePerson" msprop:Generator_TablePropName="Person" msprop:Generator_RowDeletingName="PersonRowDeleting" msprop:Generator_RowChangingName="PersonRowChanging" msprop:Generator_RowEvHandlerName="PersonRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonRowDeleted" msprop:Generator_UserTableName="Person" msprop:Generator_RowChangedName="PersonRowChanged" msprop:Generator_RowEvArgName="PersonRowChangeEvent" msprop:Generator_RowClassName="PersonRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="PersonName" msprop:Generator_ColumnVarNameInTable="columnPersonName" msprop:Generator_ColumnPropNameInRow="PersonName" msprop:Generator_ColumnPropNameInTable="PersonNameColumn" msprop:Generator_UserColumnName="PersonName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Gender" msprop:Generator_ColumnVarNameInTable="columnGender" msprop:Generator_ColumnPropNameInRow="Gender" msprop:Generator_ColumnPropNameInTable="GenderColumn" msprop:Generator_UserColumnName="Gender">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PostId" msprop:Generator_ColumnVarNameInTable="columnPostId" msprop:Generator_ColumnPropNameInRow="PostId" msprop:Generator_ColumnPropNameInTable="PostIdColumn" msprop:Generator_UserColumnName="PostId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonBenefit" msprop:Generator_TableClassName="PersonBenefitDataTable" msprop:Generator_TableVarName="tablePersonBenefit" msprop:Generator_TablePropName="PersonBenefit" msprop:Generator_RowDeletingName="PersonBenefitRowDeleting" msprop:Generator_RowChangingName="PersonBenefitRowChanging" msprop:Generator_RowEvHandlerName="PersonBenefitRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonBenefitRowDeleted" msprop:Generator_UserTableName="PersonBenefit" msprop:Generator_RowChangedName="PersonBenefitRowChanged" msprop:Generator_RowEvArgName="PersonBenefitRowChangeEvent" msprop:Generator_RowClassName="PersonBenefitRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="PersonId" msprop:Generator_ColumnVarNameInTable="columnPersonId" msprop:Generator_ColumnPropNameInRow="PersonId" msprop:Generator_ColumnPropNameInTable="PersonIdColumn" msprop:Generator_UserColumnName="PersonId" type="xs:int" />
              <xs:element name="BenefitId" msprop:Generator_ColumnVarNameInTable="columnBenefitId" msprop:Generator_ColumnPropNameInRow="BenefitId" msprop:Generator_ColumnPropNameInTable="BenefitIdColumn" msprop:Generator_UserColumnName="BenefitId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Post" msprop:Generator_TableClassName="PostDataTable" msprop:Generator_TableVarName="tablePost" msprop:Generator_TablePropName="Post" msprop:Generator_RowDeletingName="PostRowDeleting" msprop:Generator_RowChangingName="PostRowChanging" msprop:Generator_RowEvHandlerName="PostRowChangeEventHandler" msprop:Generator_RowDeletedName="PostRowDeleted" msprop:Generator_UserTableName="Post" msprop:Generator_RowChangedName="PostRowChanged" msprop:Generator_RowEvArgName="PostRowChangeEvent" msprop:Generator_RowClassName="PostRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="PostName" msprop:Generator_ColumnVarNameInTable="columnPostName" msprop:Generator_ColumnPropNameInRow="PostName" msprop:Generator_ColumnPropNameInTable="PostNameColumn" msprop:Generator_UserColumnName="PostName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BenefitList" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Person_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Person" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PersonBenefit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonBenefit" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Post_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Post" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="PostFK" msdata:parent="Post" msdata:child="Person" msdata:parentkey="Id" msdata:childkey="PostId" msprop:Generator_UserChildTable="Person" msprop:Generator_ChildPropName="GetPersonRows" msprop:Generator_UserRelationName="PostFK" msprop:Generator_RelationVarName="relationPostFK" msprop:Generator_UserParentTable="Post" msprop:Generator_ParentPropName="PostRow" />
      <msdata:Relationship name="BenefitListFK" msdata:parent="BenefitList" msdata:child="PersonBenefit" msdata:parentkey="Id" msdata:childkey="BenefitId" msprop:Generator_UserChildTable="PersonBenefit" msprop:Generator_ChildPropName="GetPersonBenefitRows" msprop:Generator_UserRelationName="BenefitListFK" msprop:Generator_ParentPropName="BenefitListRow" msprop:Generator_RelationVarName="relationBenefitListFK" msprop:Generator_UserParentTable="BenefitList" />
      <msdata:Relationship name="PersonFK" msdata:parent="Person" msdata:child="PersonBenefit" msdata:parentkey="Id" msdata:childkey="PersonId" msprop:Generator_UserChildTable="PersonBenefit" msprop:Generator_ChildPropName="GetPersonBenefitRows" msprop:Generator_UserRelationName="PersonFK" msprop:Generator_ParentPropName="PersonRow" msprop:Generator_RelationVarName="relationPersonFK" msprop:Generator_UserParentTable="Person" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>